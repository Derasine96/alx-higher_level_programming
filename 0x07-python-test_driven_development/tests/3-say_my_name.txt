# tests/3-say_my_name.txt

The ``say_my_name`` module
==========================

Using ``say_my_name``
---------------------

This is an example text file in reStructuredText format. First import
``say_my_name`` from the ``say_my_name`` module:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Now using it:

# Test for complete arguments
>>> say_my_name("Jane", "Obi")
My name is Jane Obi

If you call the function with only the first parameter, it prints only it:
>>> say_my_name("John")
My name is John

Test for Errors that might be encountered when calling the function:

# Test for missing parameters
>>> say_my_name()
Traceback (most recent call last):
  ...
TypeError: say_my_name() takes at least 1 argument (0 given)

# Test for wrong type in parameters
>>> say_my_name([], {})
Traceback (most recent call last):
    ...
TypeError: Can't convert object to str implicitly

# Test for non-string input
>>> say_my_name(5, 6)
Traceback (most recent call last):
    ...
TypeError: first_name must be a string or last_name must be a string
>>> say_my_name('a', "Jane")
Traceback (most recent call last):
    ...
TypeError: first_name must be a string

# Test for non-string input for last_name
>>> say_my_name("John", 123)
Traceback (most recent call last):
    ...
TypeError: last_name must be a string
